<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:reskeys="clr-namespace:AakStudio.Shell.UI.Themes.AvalonDock.Themes">

    <PathGeometry x:Key="Path_DocumentWellItem_Close" Figures="M 0,2.0345e-005L 7.62109,2.0345e-005L 19.2627,12.0551L 30.9043,2.0345e-005L 38.5241,2.0345e-005L 23.0726,16.0003L 38.5234,32L 30.9023,32L 19.2621,19.9462L 7.62177,32L 0.00195313,32L 15.4521,16.001L 0,2.0345e-005 Z" />

    <Style x:Key="DocumentWellItemBaseStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <ControlTemplate.Resources>
                        <Style x:Key="DocumentWellItemCloseButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Height" Value="15" />
                            <Setter Property="Width" Value="15" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Bottom" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter
                                                x:Name="contentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="false"
                                                RecognizesAccessKey="true"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=Model.IsLastFocusedDocument, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true">
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsLastFocusedDocument, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsLastFocusedDocument, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true">
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveGlyph}}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActiveHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedActivePressedGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=Model.IsLastFocusedDocument, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=Model.IsLastFocusedDocument, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonHoveredBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonHoveredBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=Model.IsLastFocusedDocument, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonPressedBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonPressedBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonUnselectedTabHoveredButtonPressedGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=Model.IsSelected, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=Model.IsSelected, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactiveHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=Model.IsSelected, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentTabItem}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabButtonSelectedInactivePressedGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border
                            x:Name="Header"
                            Padding="0,0,0,1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.Background}}"
                            BorderThickness="0,0,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2" Background="Transparent" />
                                <ContentPresenter
                                    x:Name="Title"
                                    Margin="4,3,4,2"
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}"
                                    TextOptions.TextFormattingMode="Display"
                                    TextOptions.TextHintingMode="Auto"
                                    TextOptions.TextRenderingMode="ClearType" />
                                <!--  Close button should be moved out to the container style  -->
                                <Button
                                    x:Name="DocumentCloseButton"
                                    Grid.Column="1"
                                    Margin="4,4,3,1"
                                    Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource DocumentWellItemCloseButtonBaseStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                    Visibility="Hidden">
                                    <Path
                                        Width="10"
                                        Height="10"
                                        Margin="-1,0,0,0"
                                        VerticalAlignment="Center"
                                        Data="{DynamicResource Path_DocumentWellItem_Close}"
                                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                        Stretch="Uniform" />
                                </Button>
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <!--  Close button visibility  -->
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsLastFocusedDocument}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsActive}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--  MainBorder: 17.08.2020 use HideCommand if CanClose=false but CanHide=true  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Command" Value="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="DocumentCloseButton" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" />
                        </MultiDataTrigger>
                        <!--  MainBorder: 17.08.2020 hide button if both CanClose=false and CanHide=false  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="true">
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="1,1,0,1" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="false" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="false" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="false" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=DocumentCloseButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="1,1,0,1" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type avalonDockControls:LayoutDocumentTabItem}"
        BasedOn="{StaticResource DocumentWellItemBaseStyle}"
        TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}" />

</ResourceDictionary>
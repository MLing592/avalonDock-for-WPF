<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:reskeys="clr-namespace:AakStudio.Shell.UI.Themes.AvalonDock.Themes"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <Style x:Key="{x:Type avalonDockControls:ContextMenuEx}" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ContextMenuBackground}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SystemColorsMenuText}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ContextMenuBorderBrush}}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome
                        Name="Shadow"
                        SnapsToDevicePixels="true"
                        Color="Transparent">
                        <Border
                            Name="ContextMenuBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer
                                Name="ContextMenuScrollViewer"
                                Margin="0"
                                FocusVisualStyle="{x:Null}"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                                                              ResourceId=MenuScrollViewer}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            Name="OpaqueRect"
                                            Width="{Binding ElementName=ContextMenuBorder, Path=ActualWidth}"
                                            Height="{Binding ElementName=ContextMenuBorder, Path=ActualHeight}"
                                            Fill="{Binding ElementName=ContextMenuBorder, Path=Background}" />
                                    </Canvas>
                                    <Rectangle
                                        Width="27"
                                        Margin="0"
                                        HorizontalAlignment="Left"
                                        Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ContextMenuRectangleFill}}"
                                        RadiusX="0"
                                        RadiusY="0" />
                                    <ItemsPresenter
                                        Name="ItemsPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shadow" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger SourceName="ContextMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:MenuItemEx}" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemBorder}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemForeground}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Padding" Value="2,4,2,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle
                            Fill="{TemplateBinding MenuItem.Background}"
                            Stroke="{TemplateBinding MenuItem.BorderBrush}"
                            StrokeThickness="{TemplateBinding MenuItem.BorderThickness}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="24"
                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="37" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="17" />
                            </Grid.ColumnDefinitions>
                            <!--  Glyph  -->
                            <ContentPresenter
                                x:Name="Icon"
                                Margin="1"
                                VerticalAlignment="Center"
                                ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border
                                x:Name="GlyphPanel"
                                Width="22"
                                Height="22"
                                Margin="2,1,1,1"
                                Background="{DynamicResource MenuItemGlyphPanel}"
                                BorderBrush="{DynamicResource MenuItemGlyphPanelBorder}"
                                BorderThickness="1"
                                Visibility="Hidden">
                                <Path
                                    Name="Glyph"
                                    Width="16"
                                    Height="16"
                                    Margin="1,1,0,0"
                                    Data="F1 M 5,11 L 3,7 L 5,7 L 6,9 L 9,3 L 11,3 L 7,11 L 5,11 Z"
                                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyph}}"
                                    FlowDirection="LeftToRight" />
                            </Border>
                            <ContentPresenter
                                Grid.Column="2"
                                Margin="{TemplateBinding MenuItem.Padding}"
                                ContentSource="Header"
                                RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <TextBlock
                                Grid.Column="4"
                                Margin="{TemplateBinding MenuItem.Padding}"
                                Text="{TemplateBinding MenuItem.InputGestureText}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemBackgroundHover}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemBorderHover}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemForegroundHover}}" />
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyphHover}}" />
                            <Setter TargetName="GlyphPanel" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyphPanelHover}}" />
                            <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyphPanelBorderHover}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemBackgroundDisabled}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemBorderDisabled}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemForegroundDisabled}}" />
                            <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyphDisabled}}" />
                            <Setter TargetName="GlyphPanel" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyphPanelDisabled}}" />
                            <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.MenuItemGlyphPanelBorderDisabled}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <PathGeometry x:Key="Path_HorizontalTabGroup" Figures="M 2.53856,7.38456L 2.53856,12.3846L 31.9231,12.3846L 31.9231,7.38456L 2.53856,7.38456 Z M 0,0.000162761L 34.3846,0.000162761L 34.3846,14.7694L 0,14.7694L 0,0.000162761 Z M 2.53861,24.6155L 2.53861,29.6155L 31.9232,29.6155L 31.9232,24.6155L 2.53861,24.6155 Z M 5.00801e-005,17.2309L 34.3846,17.2309L 34.3846,32.0001L 5.00801e-005,32.0001L 5.00801e-005,17.2309 Z " />
    <PathGeometry x:Key="Path_VerticalTabGroup" Figures="M 64,0.000223796L 101.319,0.000223796L 101.319,32.0002L 64,32.0002L 64,0.000223796 Z M 66.6804,8.03752L 66.6804,29.3154L 79.896,29.3154L 79.896,8.03752L 66.6804,8.03752 Z M 85.4232,8.03746L 85.4232,29.3154L 98.6388,29.3154L 98.6388,8.03746L 85.4232,8.03746 Z " />

    <ContextMenu
        x:Key="DocumentWellContextMenu"
        ItemContainerStyle="{StaticResource {x:Type avalonDockControls:MenuItemEx}}"
        Style="{StaticResource {x:Type avalonDockControls:ContextMenuEx}}">
        <MenuItem
            Command="{Binding Path=CloseCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_Close}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}" Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=CloseAllCommand}" Header="{x:Static avalonDockProperties:Resources.Document_CloseAll}" />
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avalonDockProperties:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" />
        <MenuItem
            Command="{Binding Path=NewHorizontalTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
                    Width="14"
                    Height="14"
                    VerticalAlignment="Center"
                    Data="{DynamicResource Path_HorizontalTabGroup}"
                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabMenuItemGlyph}}"
                    Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            Command="{Binding Path=NewVerticalTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
                    Width="14"
                    Height="14"
                    VerticalAlignment="Center"
                    Data="{DynamicResource Path_VerticalTabGroup}"
                    Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabMenuItemGlyph}}"
                    Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            Command="{Binding Path=MoveToNextTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
        <MenuItem
            Command="{Binding Path=MoveToPreviousTabGroupCommand}"
            Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu
        x:Key="ToolWellContextMenu"
        ItemContainerStyle="{StaticResource {x:Type avalonDockControls:MenuItemEx}}"
        Style="{StaticResource {x:Type avalonDockControls:ContextMenuEx}}">
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}" Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" />
        <MenuItem
            Command="{Binding Path=HideCommand}"
            Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <avalonDockControls:ContextMenuEx
        x:Key="DocumentWellPaneControlChildrenContextMenu"
        ItemsSource="{Binding Model.ChildrenSorted}"
        Style="{StaticResource {x:Type avalonDockControls:ContextMenuEx}}">
        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
            <Style BasedOn="{StaticResource {x:Type avalonDockControls:MenuItemEx}}" TargetType="{x:Type avalonDockControls:MenuItemEx}">
                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                <Setter Property="Command" Value="{Binding Path=., Converter={avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter}}" />
            </Style>
        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
    </avalonDockControls:ContextMenuEx>
</ResourceDictionary>
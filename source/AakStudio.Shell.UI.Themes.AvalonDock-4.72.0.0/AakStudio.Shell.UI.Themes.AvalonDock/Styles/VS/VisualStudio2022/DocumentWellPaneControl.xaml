<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:reskeys="clr-namespace:AakStudio.Shell.UI.Themes.AvalonDock.Themes">

    <PathGeometry x:Key="Path_DocumentWellPaneControl_DropDownMenu" Figures="M 352.041,32.0005L 320,0.000162761L 384,0.000162761L 352.041,32.0005 Z" />

    <Style x:Key="DocumentWellPaneControlBaseStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="DocumentWellPaneDropDownButtonBaseStyle" TargetType="{x:Type avalonDockControls:DropDownButton}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Height" Value="16" />
                            <Setter Property="Width" Value="16" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Bottom" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonDefaultGlyph}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type avalonDockControls:DropDownButton}">
                                        <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter
                                                x:Name="contentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="false"
                                                RecognizesAccessKey="true"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonHoveredBackground}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonHoveredBorder}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonHoveredGlyph}}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonPressedBackground}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonPressedBorder}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellOverflowButtonPressedGlyph}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid
                            Grid.Row="0"
                            Margin="1,0"
                            Panel.ZIndex="1"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="MainBorder"
                                Grid.ColumnSpan="2"
                                BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabStateLineActive}}"
                                BorderThickness="0,0,0,2" />
                            <avalonDockControls:DocumentPaneTabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="0,0,0,2"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                            <avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                Grid.Column="1"
                                Margin="0,0,0,5"
                                DropDownContextMenu="{DynamicResource DocumentWellPaneControlChildrenContextMenu}"
                                DropDownContextMenuDataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource DocumentWellPaneDropDownButtonBaseStyle}">
                                <Path
                                    Width="8"
                                    Height="8"
                                    Margin="0,4,0,0"
                                    Data="{DynamicResource Path_DocumentWellPaneControl_DropDownMenu}"
                                    Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                    Stretch="Uniform" />
                            </avalonDockControls:DropDownButton>
                        </Grid>
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}"
                            BorderThickness="1,0,1,1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="0"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.IsActive, RelativeSource={RelativeSource Self}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabStateLineInactive}}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ContentPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ShowHeader}" Value="false">
                            <Setter TargetName="ContentPanel" Property="BorderThickness" Value="1" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedBackground}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedText}}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true" UseLayoutRounding="true">
                                    <Border
                                        x:Name="mainBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorder}}"
                                        BorderThickness="1">
                                        <Border
                                            x:Name="innerBorder"
                                            Margin="-1,-1,-1,0"
                                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorder}}"
                                            BorderThickness="0,2,0,0" />
                                    </Border>
                                    <ContentPresenter
                                        x:Name="Content"
                                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="true"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                    <!--  Document Well : Tab / Selected, active  -->
                                    <DataTrigger Binding="{Binding IsActive}" Value="true">
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedActiveBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorderActive}}" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorderActive}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedActiveText}}" />
                                    </DataTrigger>
                                    <!--  Document Well : Tab / Selected, inactive  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="false" />
                                            <Condition Binding="{Binding IsSelected}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedInactiveBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorderInactive}}" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorderInactive}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabSelectedInactiveText}}" />
                                    </MultiDataTrigger>
                                    <!--  Document Well : Tab / Unselected, hovered  -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedHoveredBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemBorderUnselectedHover}}" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentTabItemInBorderUnselectedHover}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DocumentWellTabUnselectedHoveredText}}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:reskeys="clr-namespace:AakStudio.Shell.UI.Themes.AvalonDock.Themes">

    <Geometry x:Key="Path_ToolWellIcon_Menu">M 352.041,32.0005L 320,0.000162761L 384,0.000162761L 352.041,32.0005 Z</Geometry>
    <Geometry x:Key="Path_ToolWellIcon_AutoHide">F1 M3,11 L3,7 L0,7 L0,6 L1,6 L1,1 L1,0 L6,0 L6,1 L6,6 L7,6 L7,7 L4,7 L4,11 L3,11 M2,1 L2,6 L4,6 L4,1 L2,1</Geometry>
    <Geometry x:Key="Path_ToolWellIcon_Close">F1 M0,0 L2,0 L5,3 L8,0 L10,0 L6,4 L10,8 L8,8 L5,5 L2,8 L0,8 L4,4 L0,0</Geometry>

    <Style x:Key="ToolWellItemTitleBaseStyle" TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}">
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveText}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <DrawingBrush
                            x:Key="ActivedDragHandleDrawingBrush"
                            TileMode="Tile"
                            Viewbox="0,0,4,4"
                            ViewboxUnits="Absolute"
                            Viewport="0,0,4,4"
                            ViewportUnits="Absolute">
                            <DrawingBrush.Drawing>
                                <GeometryDrawing Brush="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveGrip}}">
                                    <GeometryDrawing.Geometry>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <RectangleGeometry Rect="0,0,1,1" />
                                                <RectangleGeometry Rect="2,2,1,1" />
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>

                        <DrawingBrush
                            x:Key="UnActivedDragHandleDrawingBrush"
                            TileMode="Tile"
                            Viewbox="0,0,4,4"
                            ViewboxUnits="Absolute"
                            Viewport="0,0,4,4"
                            ViewportUnits="Absolute">
                            <DrawingBrush.Drawing>
                                <GeometryDrawing Brush="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionInactiveGrip}}">
                                    <GeometryDrawing.Geometry>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <RectangleGeometry Rect="0,0,1,1" />
                                                <RectangleGeometry Rect="2,2,1,1" />
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>

                        <Style x:Key="ToolWellItemTitleButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Height" Value="16" />
                            <Setter Property="Width" Value="16" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Bottom" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter
                                                x:Name="contentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="false"
                                                RecognizesAccessKey="true"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:AnchorablePaneTitle}}}" Value="true">
                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveGlyph}}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:AnchorablePaneTitle}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:AnchorablePaneTitle}}}" Value="true" />
                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:AnchorablePaneTitle}}}" Value="false" />
                                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBackground}}" />
                                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredBorder}}" />
                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveHoveredGlyph}}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style
                            x:Key="ToolWellItemTitleDropDownButtonBaseStyle"
                            BasedOn="{StaticResource ToolWellItemTitleButtonBaseStyle}"
                            TargetType="{x:Type avalonDockControls:DropDownButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBackground}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedBorder}}" />
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActivePressedGlyph}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Border
                                    x:Name="innerBorder"
                                    BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWellInnerBorderInactive}}"
                                    BorderThickness="0,2,0,0" />
                            </Border>
                            <Grid Margin="2,4,3,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <DockPanel>
                                    <Border
                                        Padding="2,0,4,0"
                                        HorizontalAlignment="Left"
                                        Background="{TemplateBinding Background}">
                                        <ContentPresenter
                                            x:Name="Header"
                                            Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </Border>
                                    <Rectangle
                                        x:Name="DragHandleTexture"
                                        Height="5"
                                        Margin="4,0,2,0"
                                        VerticalAlignment="Center"
                                        Fill="{StaticResource UnActivedDragHandleDrawingBrush}"
                                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                                        UseLayoutRounding="true" />
                                </DockPanel>

                                <avalonDockControls:DropDownButton
                                    x:Name="MenuDropDownButton"
                                    Grid.Column="1"
                                    Margin="0,0,1,0"
                                    DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ToolWellItemTitleDropDownButtonBaseStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                    <Path
                                        Width="8"
                                        Height="8"
                                        Data="{DynamicResource Path_ToolWellIcon_Menu}"
                                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                        Stretch="Uniform" />
                                </avalonDockControls:DropDownButton>

                                <Button
                                    x:Name="PART_AutoHidePin"
                                    Grid.Column="2"
                                    Margin="0,0,1,0"
                                    Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ToolWellItemTitleButtonBaseStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                    <Path
                                        Width="11"
                                        Height="11"
                                        Data="{DynamicResource Path_ToolWellIcon_AutoHide}"
                                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                        Stretch="Uniform" />
                                </Button>
                                <Button
                                    x:Name="PART_HidePin"
                                    Grid.Column="3"
                                    Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ToolWellItemTitleButtonBaseStyle}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                    <Path
                                        Width="10"
                                        Height="10"
                                        Data="{DynamicResource Path_ToolWellIcon_Close}"
                                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"
                                        Stretch="Uniform" />
                                </Button>
                            </Grid>
                        </Grid>
                    </avalonDockControls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                            <Setter TargetName="PART_HidePin" Property="Command" Value="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_HidePin" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionActiveText}}" />
                            <Setter TargetName="DragHandleTexture" Property="Fill" Value="{StaticResource ActivedDragHandleDrawingBrush}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWellInnerBorder}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type avalonDockControls:AnchorablePaneTitle}"
        BasedOn="{StaticResource ToolWellItemTitleBaseStyle}"
        TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}" />

</ResourceDictionary>
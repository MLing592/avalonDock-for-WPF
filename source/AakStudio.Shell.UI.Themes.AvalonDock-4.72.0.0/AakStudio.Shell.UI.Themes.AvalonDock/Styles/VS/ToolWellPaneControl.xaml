<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:reskeys="clr-namespace:AakStudio.Shell.UI.Themes.AvalonDock.Themes">

    <Style x:Key="ToolWellPaneControlBaseStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.PanelBorderBrush}}"
                            BorderThickness="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="1"
                            Margin="0"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemStaticBackground}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemStaticBorder}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemStaticForeground}}" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="6,3" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Border
                                        x:Name="mainBorder"
                                        Margin="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}">
                                        <Border x:Name="innerBorder" BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemStaticInBorder}}" />
                                    </Border>
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header"
                                        Focusable="false"
                                        RecognizesAccessKey="true"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        TextElement.Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemForeground}}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemMouseOverForeground}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemDisabledForeground}}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemSelectedForeground}}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemMouseOverInBorder}}" />
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,0,0,1" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="0,0,0,0" />
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemMouseOverBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemMouseOverBorder}}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemDisabledInBorder}}" />
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,0,0,1" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="0,0,0,0" />
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemDisabledBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemDisabledBorder}}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,0,0,1" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="0,0,0,0" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemSelectedInBorder}}" />
                                        <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,0,0,2" />
                                        <Setter TargetName="mainBorder" Property="Margin" Value="0,-1,0,0" />
                                        <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemSelectedBackground}}" />
                                        <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.TabItemSelectedBorder}}" />
                                        <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count, FallbackValue=1}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<MWindow:MetroWindow
    x:Class="MLibTest.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:MWindow="clr-namespace:MWindowLib;assembly=MWindowLib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:demos="clr-namespace:MLibTest.Demos"
    xmlns:demoviews="clr-namespace:MLibTest.Demos.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="mainWindow"
    Title="MainWindow"
    mc:Ignorable="d">
    <Grid
        xmlns:ThemeBehav="clr-namespace:MLib.Behaviors;assembly=MLib"
        xmlns:bindLocal="clr-namespace:MLibTest.Demos"
        xmlns:conv="clr-namespace:MLibTest.Demos.Demos.Converters">
        <Grid.Resources>
            <conv:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
            <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="16" />
        </Grid.RowDefinitions>

        <Menu>
            <Menu.Resources>
                <!--  Use a proxy to bind items to root object of this collection  -->
                <bindLocal:BindingProxy x:Key="MenuItemsProxy" Data="{Binding}" />
            </Menu.Resources>
            <MenuItem Header="File">
                <MenuItem Command="{Binding AD_WorkSpace.NewCommand}" Header="New" />
                <MenuItem Command="{Binding AD_WorkSpace.OpenCommand}" Header="Open" />
                <Separator />
                <MenuItem Command="{Binding AD_WorkSpace.ActiveDocument.SaveCommand}" Header="Save" />
                <MenuItem Command="{Binding AD_WorkSpace.ActiveDocument.SaveAsCommand}" Header="Save As..." />
                <Separator />
                <MenuItem Command="{Binding AD_WorkSpace.ActiveDocument.CloseCommand}" Header="Close" />
            </MenuItem>
            <MenuItem Header="Layout">
                <MenuItem Command="{Binding LoadLayoutCommand, ElementName=mainWindow}" Header="Load" />
                <MenuItem Command="{Binding SaveLayoutCommand, ElementName=mainWindow}" Header="Save" />
                <MenuItem Click="OnDumpToConsole" Header="Dump to Console" />
            </MenuItem>
            <MenuItem Header="Tools">
                <MenuItem
                    DisplayMemberPath="Model.DisplayName"
                    Header="Themes"
                    IsEnabled="{Binding AppTheme.IsEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding AppTheme.ListOfThemes}">
                    <MenuItem.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                            <!--  Setter Property="Header" Value="{Binding Model.Name, Mode=OneWay}" /  -->
                            <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsCheckable" Value="True" />
                            <Setter Property="Command" Value="{Binding Path=Data.ThemeSelectionChangedCommand, Source={StaticResource MenuItemsProxy}}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                            <!--  Send this item for processing to the bound command  -->
                            <Setter Property="ThemeBehav:MergeStyleBehaviour.AutoMergeStyle" Value="True" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem
                    Header="File Stats"
                    IsCheckable="True"
                    IsChecked="{Binding AD_WorkSpace.FileStats.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <MenuItem
                    Header="Color Picker"
                    IsCheckable="True"
                    IsChecked="{Binding AD_WorkSpace.ColorPicker.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <MenuItem
                    Header="Tool1"
                    IsCheckable="True"
                    IsChecked="{Binding AD_WorkSpace.Tool1.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <MenuItem
                    Header="Tool2"
                    IsCheckable="True"
                    IsChecked="{Binding AD_WorkSpace.Tool2.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <MenuItem
                    Header="Tool3"
                    IsCheckable="True"
                    IsChecked="{Binding AD_WorkSpace.Tool3.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </MenuItem>
        </Menu>

        <TabControl Grid.Row="1">
            <TabItem Name="tab1" Header="tab 1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ProgressBar
                        x:Name="loadProgress"
                        Grid.Row="0"
                        Background="White"
                        IsIndeterminate="True"
                        Visibility="Visible" />

                    <DockingManager
                        xmlns:views="clr-namespace:MLibTest.Demos.ViewModels.Views"
                        x:Name="dockManager"
                        Grid.Row="1"
                        ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                        AnchorablesSource="{Binding Tools}"
                        DataContext="{Binding AD_WorkSpace}"
                        DocumentsSource="{Binding Files}"
                        IsVirtualizingAnchorable="True"
                        IsVirtualizingDocument="True"
                        Visibility="Hidden">
                        <!-- avalonDock:DockingManager.Theme>
						<avalonDock:Vs2013LightTheme/>
					</avalonDock:DockingManager.Theme-->
                        <DockingManager.LayoutItemTemplateSelector>
                            <demos:PanesTemplateSelector>
                                <demos:PanesTemplateSelector.FileViewTemplate>
                                    <DataTemplate>
                                        <views:DocumentView />
                                    </DataTemplate>
                                </demos:PanesTemplateSelector.FileViewTemplate>
                                <demos:PanesTemplateSelector.FileStatsViewTemplate>
                                    <DataTemplate>
                                        <Border Padding="6">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{Binding FileSize}" />
                                                <TextBlock Text="{Binding LastModified}" />
                                                <TextBox Text="test" />
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </demos:PanesTemplateSelector.FileStatsViewTemplate>
                                <demos:PanesTemplateSelector.ColorPickerViewTemplate>
                                    <DataTemplate>
                                        <Border Padding="6">
                                            <ScrollViewer>
                                                <demoviews:ColorSelectionView />
                                            </ScrollViewer>
                                        </Border>
                                    </DataTemplate>
                                </demos:PanesTemplateSelector.ColorPickerViewTemplate>
                                <demos:PanesTemplateSelector.Tooln_ViewTemplate>
                                    <DataTemplate>
                                        <Border Padding="6">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="I am a ToolWindow test implementation" />
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </demos:PanesTemplateSelector.Tooln_ViewTemplate>
                            </demos:PanesTemplateSelector>
                        </DockingManager.LayoutItemTemplateSelector>

                        <DockingManager.LayoutItemContainerStyleSelector>
                            <demos:PanesStyleSelector>
                                <demos:PanesStyleSelector.ToolStyle>
                                    <!--  Define Style of a Tool Window View  -->
                                    <Style TargetType="{x:Type LayoutAnchorableItem}">
                                        <Setter Property="Title" Value="{Binding Model.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Setter Property="IconSource" Value="{Binding Model.IconSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                                        <Setter Property="ContentId" Value="{Binding Model.ContentId, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                        <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                                        <Setter Property="CanHide" Value="True" />
                                    </Style>
                                </demos:PanesStyleSelector.ToolStyle>
                                <demos:PanesStyleSelector.FileStyle>
                                    <!--  Define Style of a Document View  -->
                                    <Style TargetType="{x:Type LayoutDocumentItem}">
                                        <Setter Property="Title" Value="{Binding Model.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Setter Property="ToolTip" Value="{Binding Model.FilePath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                        <Setter Property="IconSource" Value="{Binding Model.IconSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Setter Property="ContentId" Value="{Binding Model.ContentId, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </Style>
                                </demos:PanesStyleSelector.FileStyle>
                            </demos:PanesStyleSelector>
                        </DockingManager.LayoutItemContainerStyleSelector>
                        <DockingManager.LayoutUpdateStrategy>
                            <demos:LayoutInitializer />
                        </DockingManager.LayoutUpdateStrategy>

                        <LayoutRoot>
                            <LayoutPanel>
                                <LayoutDocumentPane />
                                <!--  Use DockMinWidth="250" to limit the size of a LayoutAnchorable  -->
                                <LayoutAnchorablePane Name="ToolsPane" DockMinWidth="375" />
                            </LayoutPanel>
                        </LayoutRoot>
                    </DockingManager>
                </Grid>
            </TabItem>
            <TabItem Name="tab2" Header="tab 2">
                <!--<TextBlock Text="tab2 is just for testing load/unload control in tab1" />-->
                <DockingManager>
                    <LayoutRoot>
                        <LayoutPanel>
                            <LayoutAnchorablePane DockWidth="200">
                                <LayoutAnchorable Title="title1" />
                            </LayoutAnchorablePane>
                            <LayoutDocumentPane>
                                <LayoutDocument Title="title2" />
                            </LayoutDocumentPane>
                            <LayoutAnchorablePane DockWidth="200">
                                <LayoutAnchorable Title="title3" />
                            </LayoutAnchorablePane>
                        </LayoutPanel>
                    </LayoutRoot>
                </DockingManager>
            </TabItem>
        </TabControl>
    </Grid>
</MWindow:MetroWindow>
